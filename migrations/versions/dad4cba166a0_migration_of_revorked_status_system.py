"""Migration of revorked status system

Revision ID: dad4cba166a0
Revises: 
Create Date: 2022-12-25 19:58:29.625291

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'dad4cba166a0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
                    sa.Column('address_id', sa.Integer(), nullable=False),
                    sa.Column('city', sa.String(length=64), nullable=False),
                    sa.Column('street', sa.String(length=64), nullable=True),
                    sa.Column('house_number', sa.String(length=16), nullable=False),
                    sa.Column('zip_code', sa.String(length=16), nullable=False),
                    sa.PrimaryKeyConstraint('address_id')
                    )
    op.create_table('materials',
                    sa.Column('material_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=False),
                    sa.PrimaryKeyConstraint('material_id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('roles',
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=16), nullable=False),
                    sa.Column('permissions', sa.Integer(), nullable=True),
                    sa.Column('default', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('role_id'),
                    sa.UniqueConstraint('name')
                    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_default'), ['default'], unique=False)

    op.create_table('statuses',
                    sa.Column('status_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=False),
                    sa.Column('default', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('status_id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('price_list',
                    sa.Column('price_id', sa.Integer(), nullable=False),
                    sa.Column('price', sa.Float(), nullable=False),
                    sa.Column('date', sa.DateTime(), nullable=True),
                    sa.Column('material_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['material_id'], ['materials.material_id'], ),
                    sa.PrimaryKeyConstraint('price_id')
                    )
    op.create_table('users',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=64), nullable=False),
                    sa.Column('last_name', sa.String(length=64), nullable=True),
                    sa.Column('telephone_number', sa.String(length=17), nullable=True),
                    sa.Column('login', sa.String(length=128), nullable=False),
                    sa.Column('password_hash', sa.String(length=128), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.Column('status_id', sa.Integer(), nullable=True),
                    sa.Column('permanent_residence_id', sa.Integer(), nullable=True),
                    sa.Column('temporary_residence_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['permanent_residence_id'], ['addresses.address_id'], ),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
                    sa.ForeignKeyConstraint(['status_id'], ['statuses.status_id'], ),
                    sa.ForeignKeyConstraint(['temporary_residence_id'], ['addresses.address_id'], ),
                    sa.PrimaryKeyConstraint('user_id'),
                    sa.UniqueConstraint('login')
                    )
    op.create_table('purchases',
                    sa.Column('purchase_id', sa.Integer(), nullable=False),
                    sa.Column('weight', sa.Float(), nullable=False),
                    sa.Column('date', sa.DateTime(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('material_id', sa.Integer(), nullable=True),
                    sa.Column('buying_employee_id', sa.Integer(), nullable=True),
                    sa.Column('selling_customer_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['buying_employee_id'], ['users.user_id'], ),
                    sa.ForeignKeyConstraint(['material_id'], ['materials.material_id'], ),
                    sa.ForeignKeyConstraint(['selling_customer_id'], ['users.user_id'], ),
                    sa.PrimaryKeyConstraint('purchase_id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('purchases')
    op.drop_table('users')
    op.drop_table('price_list')
    op.drop_table('statuses')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_default'))

    op.drop_table('roles')
    op.drop_table('materials')
    op.drop_table('addresses')
    # ### end Alembic commands ###
